/*
 * Copyright (c) 2019. HÃ©ctor de Isidro - hrules6872
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: rootProject.file('buildsystem/configuration.gradle')

android {
  compileSdkVersion androidBuildCompileSDKVersion
  buildToolsVersion androidBuildToolsVersion

  defaultConfig {
    applicationId "com.hrules.composer"
    minSdkVersion androidBuildMinSDKVersion
    targetSdkVersion androidBuildTargetSDKVersion
    versionCode appVersionCode
    versionName appVersionName
  }

  signingConfigs {
    release {
      Properties appSecretProps = new Properties()
      appSecretProps.load(new FileInputStream(new File('app.secrets.properties')))

      keyAlias appSecretProps['APP_RELEASE_KEYALIAS']
      keyPassword appSecretProps['APP_RELEASE_KEYPASSWORD']
      storeFile file(appSecretProps['APP_RELEASE_STOREFILE'])
      storePassword appSecretProps['APP_RELEASE_STOREPASSWORD']
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix ".debug"
      versionNameSuffix '-debug'
      debuggable true
      minifyEnabled false
    }

    release {
      debuggable false
      minifyEnabled true
      shrinkResources true
      proguardFile 'proguard-rules.pro'
      zipAlignEnabled true
      signingConfig signingConfigs.release
    }
  }
}

dependencies {
  projectDependencies.each {
    add('implementation', it.value)
  }

  androidSupportDependencies.each {
    add('implementation', it.value)
  }
}
